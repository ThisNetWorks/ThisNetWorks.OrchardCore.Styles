@model EditStyleFieldViewModel

@{
    var settings = Model.PartFieldDefinition.GetSettings<StyleFieldSettings>();
    var culture = await Orchard.GetContentCultureAsync(Model.Field.ContentItem);
    var compiledStyle = String.IsNullOrEmpty(Model.CompiledStyle) ? String.Empty : Model.CompiledStyle;

    var mediaItemUrl = Url.Action("GetMediaItem", "Admin", new { area = "OrchardCore.Media" });
}

<script asp-src="~/OrchardCore.Media/Scripts/media.js" asp-name="media" at="Foot" depends-on="admin, vuejs, sortable, vuedraggable, jQuery-ui"></script>
<style asp-src="~/OrchardCore.Media/Styles/media.min.css" debug-src="~/OrchardCore.Media/Styles/media.css"></style>
<script asp-name="styles-app" asp-src="~/ThisNetWorks.OrchardCore.Styles/dist/js/app.js" at="Foot" depends-on="vuejs"></script>
<script asp-name="styles-chunk-vendors" asp-src="~/ThisNetWorks.OrchardCore.Styles/dist/js/chunk-vendors.js" at="Foot" depends-on="styles-app"></script>
<style asp-name="styles-app" asp-src="~/ThisNetWorks.OrchardCore.Styles/dist/css/app.css" depends-on="admin"></style>

<div id="@Html.IdFor(x => x)" data-tnw-styles="true">
    <styles-app :style-record='@Model.StyleRecord'
                :schema="@Model.Schema"
                media-item-url="@mediaItemUrl"
                compiled-style='@Model.CompiledStyle'>
        <template v-slot="slot">
            <input asp-for="CompiledStyle" type="hidden" :value="slot.props.outputCompiledStyle" />
            <input asp-for="StyleRecord" type="hidden" :value="slot.props.outputStyleRecord" />
        </template>
    </styles-app>
</div>

<div class="form-group">
    @if (!String.IsNullOrEmpty(settings.Hint))
    {
        <span class="hint">@settings.Hint</span>
    }
</div>

<script at="Foot">
    initializeMediaApplication(false, '@Url.Action("MediaApplication", "Admin", new { area = "OrchardCore.Media" })', '@Context.Request.PathBase.ToString()');
</script>
